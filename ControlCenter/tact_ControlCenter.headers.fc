;;
;; Header files for ControlCenter
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $CBet$_load
(slice, ((int))) $CBet$_load(slice sc_0) inline;

;; $Bet$_store
builder $Bet$_store(builder build_0, (int, slice) v) inline;

;; $Bet$_store_cell
cell $Bet$_store_cell((int, slice) v) inline;

;; $CPnl$_load
(slice, ((int))) $CPnl$_load(slice sc_0) inline;

;; $Pnl$_store
builder $Pnl$_store(builder build_0, (int, slice) v) inline;

;; $Pnl$_store_cell
cell $Pnl$_store_cell((int, slice) v) inline;

;; $Withdraw$_store
builder $Withdraw$_store(builder build_0, (int) v) inline;

;; $Withdraw$_store_cell
cell $Withdraw$_store_cell((int) v) inline;

;; $Withdraw$_load
(slice, ((int))) $Withdraw$_load(slice sc_0) inline;

;; $All$_load
(slice, ((int))) $All$_load(slice sc_0) inline;

;; $ControlCenter$_store
builder $ControlCenter$_store(builder build_0, (int, slice) v) inline;

;; $ControlCenter$_load
(slice, ((int, slice))) $ControlCenter$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Turtle$init$_store
builder $Turtle$init$_store(builder build_0, (int) v) inline;

;; $ControlCenter$_contract_init
(int, slice) $ControlCenter$_contract_init() impure inline_ref;

;; $ControlCenter$_contract_load
(int, slice) $ControlCenter$_contract_load() impure inline_ref;

;; $ControlCenter$_contract_store
() $ControlCenter$_contract_store((int, slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Turtle$_init_child
(cell, cell) $Turtle$_init_child(cell sys', int $id) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $ControlCenter$_fun_tournamentActive
((int, slice), slice) $ControlCenter$_fun_tournamentActive((int, slice) $self) impure inline_ref;

;; $ControlCenter$_fun_tournamentAddress
((int, slice), slice) $ControlCenter$_fun_tournamentAddress((int, slice) $self, int $id) impure inline_ref;

;; $ControlCenter$_fun_forward
((int, slice), ()) $ControlCenter$_fun_forward((int, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $ControlCenter$_fun_notify
((int, slice), ()) $ControlCenter$_fun_notify((int, slice) $self, cell $body) impure inline;

;; $ControlCenter$_fun_requireOwner
((int, slice), ()) $ControlCenter$_fun_requireOwner((int, slice) $self) impure inline_ref;

;; $ControlCenter$_fun_owner
((int, slice), slice) $ControlCenter$_fun_owner((int, slice) $self) impure inline_ref;

;; $Bet$_constructor_address_turtleNumber
((int, slice)) $Bet$_constructor_address_turtleNumber(slice $address, int $turtleNumber) inline;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice $to, int $value, int $mode, cell $code, cell $data, cell $body) inline;

;; $Pnl$_constructor_id_address
((int, slice)) $Pnl$_constructor_id_address(int $id, slice $address) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice $to, int $value, int $mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
