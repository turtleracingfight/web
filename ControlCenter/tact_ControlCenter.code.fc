#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_ControlCenter.headers.fc";
#include "tact_ControlCenter.stdlib.fc";
#include "tact_ControlCenter.storage.fc";

;;
;; Contract ControlCenter functions
;;

(int, slice) $ControlCenter$_contract_init() impure inline_ref {
    var (($self'fee, $self'owner)) = (50000000, null());
    $self'owner = __tact_context_get_sender();
    return ($self'fee, $self'owner);
}

((int, slice), slice) $ControlCenter$_fun_tournamentActive((int, slice) $self) impure inline_ref {
    var (($self'fee, $self'owner)) = $self;
    int $days = ($global_now() / 86400);
    var ($init'code, $init'data) = $Turtle$_init_child(__tact_context_sys, $days);
    var $fresh$ret_13 = $global_contractAddress(($init'code, $init'data));
    return (($self'fee, $self'owner), $fresh$ret_13);
}

((int, slice), slice) $ControlCenter$_fun_tournamentAddress((int, slice) $self, int $id) impure inline_ref {
    var (($self'fee, $self'owner)) = $self;
    var ($init'code, $init'data) = $Turtle$_init_child(__tact_context_sys, $id);
    var $fresh$ret_14 = $global_contractAddress(($init'code, $init'data));
    return (($self'fee, $self'owner), $fresh$ret_14);
}

((int, slice), ()) $ControlCenter$_fun_requireOwner((int, slice) $self) impure inline_ref {
    var (($self'fee, $self'owner)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'fee, $self'owner), ());
}

((int, slice), slice) $ControlCenter$_fun_owner((int, slice) $self) impure inline_ref {
    var (($self'fee, $self'owner)) = $self;
    var $fresh$ret_15 = $self'owner;
    return (($self'fee, $self'owner), $fresh$ret_15);
}

;;
;; Receivers of a Contract ControlCenter
;;

(((int, slice)), ()) $ControlCenter$_internal_binary_CBet((int, slice) $self, (int) $msg) impure inline {
    var ($self'fee, $self'owner) = $self;
    var ($msg'turtleNumber) = $msg;
    throw_unless(36376, ($msg'turtleNumber > 0));
    throw_unless(61241, ($msg'turtleNumber < 11));
    int $days = ($global_now() / 86400);
    var ($init'code, $init'data) = $Turtle$_init_child(__tact_context_sys, $days);
    slice $address = $global_contractAddress(($init'code, $init'data));
    var ($message'turtleNumber, $message'address) = $Bet$_constructor_address_turtleNumber(__tact_context_get_sender(), $msg'turtleNumber);
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($address, ($Context$_get_value(__tact_context_get()) - $self'fee), 2, $init'code, $init'data, $Bet$_store_cell(($message'turtleNumber, $message'address))));
    return (($self'fee, $self'owner), ());
}

(((int, slice)), ()) $ControlCenter$_internal_binary_CPnl((int, slice) $self, (int) $msg) impure inline {
    var ($self'fee, $self'owner) = $self;
    var ($msg'id) = $msg;
    var ($init'code, $init'data) = $Turtle$_init_child(__tact_context_sys, $msg'id);
    slice $address = $global_contractAddress(($init'code, $init'data));
    var ($message'id, $message'address) = $Pnl$_constructor_id_address($msg'id, __tact_context_get_sender());
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($address, $Context$_get_value(__tact_context_get()), 2, $init'code, $init'data, $Pnl$_store_cell(($message'id, $message'address))));
    return (($self'fee, $self'owner), ());
}

(((int, slice)), ()) $ControlCenter$_internal_binary_Withdraw((int, slice) $self, (int) $msg) impure inline {
    var ($self'fee, $self'owner) = $self;
    var ($msg'id) = $msg;
    ($self'fee, $self'owner)~$ControlCenter$_fun_requireOwner();
    var ($init'code, $init'data) = $Turtle$_init_child(__tact_context_sys, $msg'id);
    slice $address = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($address, $Context$_get_value(__tact_context_get()), 2, $init'code, $init'data, $Withdraw$_store_cell(($msg'id))));
    return (($self'fee, $self'owner), ());
}

(((int, slice)), ()) $ControlCenter$_internal_binary_All((int, slice) $self, (int) $msg) impure inline {
    var ($self'fee, $self'owner) = $self;
    var ($msg'amount) = $msg;
    ($self'fee, $self'owner)~$ControlCenter$_fun_requireOwner();
    $global_send($SendParameters$_constructor_to_value_mode(__tact_context_get_sender(), $msg'amount, 2));
    return (($self'fee, $self'owner), ());
}

(((int, slice)), ()) $ControlCenter$_internal_binary_Deploy((int, slice) $self, (int) $deploy) impure inline {
    var ($self'fee, $self'owner) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'fee, $self'owner)~$ControlCenter$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'fee, $self'owner), ());
}

;;
;; Get methods of a Contract ControlCenter
;;

_ %tournamentActive() method_id(121029) {
    var self = $ControlCenter$_contract_load();
    var res = self~$ControlCenter$_fun_tournamentActive();
    return res;
}

_ %tournamentAddress(int $id) method_id(113604) {
    int $id = $id;
    var self = $ControlCenter$_contract_load();
    var res = self~$ControlCenter$_fun_tournamentAddress($id);
    return res;
}

_ %owner() method_id(83229) {
    var self = $ControlCenter$_contract_load();
    var res = self~$ControlCenter$_fun_owner();
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ControlCenter
;;

((int, slice), int) $ControlCenter$_contract_router_internal((int, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive CBet message
    if (op == 3090833964) {
        var msg = in_msg~$CBet$_load();
        self~$ControlCenter$_internal_binary_CBet(msg);
        return (self, true);
    }
    
    ;; Receive CPnl message
    if (op == 100692031) {
        var msg = in_msg~$CPnl$_load();
        self~$ControlCenter$_internal_binary_CPnl(msg);
        return (self, true);
    }
    
    ;; Receive Withdraw message
    if (op == 465817403) {
        var msg = in_msg~$Withdraw$_load();
        self~$ControlCenter$_internal_binary_Withdraw(msg);
        return (self, true);
    }
    
    ;; Receive All message
    if (op == 1291309529) {
        var msg = in_msg~$All$_load();
        self~$ControlCenter$_internal_binary_All(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ControlCenter$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ControlCenter$_contract_load();
    
    ;; Handle operation
    int handled = self~$ControlCenter$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ControlCenter$_contract_store(self);
}
